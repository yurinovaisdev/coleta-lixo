name: Continuous Integration

on:
  pull_request:  # Aciona para pull requests
  push:          # Aciona para pushs
    branches:
      - '*'      # Qualquer branch

jobs:
  continuous-integration:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'adopt'

      - name: Build
        run: mvn clean install # Compila o projeto

      - name: Start Application
        run: |
          nohup mvn spring-boot:run & # Inicia a aplicação em segundo plano
          sleep 20                    # Espera a aplicação subir

      - name: Run Tests
        run: mvn test # Roda os testes que acessam localhost:8080

  deploy:
    runs-on: ubuntu-latest
    needs: continuous-integration  # Esse job depende do anterior
    if: success()  # Esse job só será executado se o job anterior for bem-sucedido

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'adopt'

      - name: Build and Test for Deploy
        run: |
          nohup mvn spring-boot:run & # Inicia a aplicação em segundo plano para os testes
          sleep 20                    # Espera a aplicação subir
          mvn test                    # Roda os testes novamente no deploy

      - name: Deploy application
        run: |
          echo "Deploying application..."
          # Adicione aqui seu comando de deploy
